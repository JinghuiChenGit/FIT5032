@model HotelBooking.Models.SendEmailViewModel

@{
    ViewBag.Title = "Contact";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Contact</h2>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA0H1DehAE8f5UAaxRsb9KuELxkXik92qk&callback=initMap"
        async defer></script>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    if (@ViewBag.Result != null)
    {
        <div class="alert alert-info">@ViewBag.Result</div>
    }

<div class="form-horizontal" style="height:1000px">
    <h4>SendEmailViewModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.ToEmail, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ToEmail, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ToEmail, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Contents, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Contents, new { @class = "form-control", rows = "10" })
            @Html.ValidationMessageFor(model => model.Contents, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Attachment, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="form-group col-md-offset-2 col-md-10">
                <form method="get" action="#">
                    <input type="file"
                           id="myfile"
                           size="30"
                           name="Attachment">
                    <br>
                    <a href="#" id="myframe"></a>
                </form>
            </div>

            @Html.ValidationMessageFor(model => model.Attachment, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Send" class="btn btn-default" />
        </div>
    </div>

    <div class="form-group"></div>
    

    <div class="form-group">
        <div class="col-md-1"></div>
        <div class="col-md-5">
            <h2>Come to visit us</h2><br><br>
            <p>Location: Wellington Rd, Clayton VIC 3800</p><br>
            <p>Contact Number: 0452132654</p><br>
            <p>Fax number: 23202656</p><br>
            <p>Email: monashuniversity@moansh.com</p><br>
            <p>Opennig hour: 9am - 5pm</p><br><br>
            <div align="center"><input type="button" class=" btn btn-default" id="now" value="Direction" /></div>
        </div>

        <div class="col-md-6" >
            <div class="col-md-5" id="map" style="height:400px;width:500px;  "></div>


        </div>

    </div>
        <div class="form-group" align="center"></div>


    </div>
}

<div>
    @Html.ActionLink("Back to Home", "Index")
</div>


<script>
    var map, infoWindow, pos;
    //var button = documnet.getElementById('now');
    function initMap() {
        var directionsService = new google.maps.DirectionsService();
        var directionsRenderer = new google.maps.DirectionsRenderer();

        var contentString = '<div id="content" style="width:200px">' +
            '<div id="siteNotice">' +
            '</div>' +
            '<h3 id="firstHeading" >Monash University Caulfield Campus</h3>' +
            '<div id="bodyContent">' +
            '<p><b>Monash University</b>, Caulfield campus is a campus of Monash University located in Caulfield</b>, , which is a suburb of Melbourne, Australia, in the state of Victoria. ' +

            '</p>' +

            '</div>' +
            '</div>';

        map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: -37.876823, lng: 145.045837 },
            zoom: 15
        });

        directionsRenderer.setMap(map);

        var onChangeHandler = function () {
            calculateAndDisplayRoute(directionsService, directionsRenderer);
        };
        document.getElementById('now').addEventListener('click', onChangeHandler);

        var info = new google.maps.InfoWindow({
            content: contentString
        });

        var marker = new google.maps.Marker({
            position: { lat: -37.876823, lng: 145.045837 },
            map: map,
            title: 'Hello World!'
        });
        info.open(map, marker);
        marker.addListener('click', function () {

        });
        infoWindow = new google.maps.InfoWindow;
        // HTML5 geolocation.
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function (position) {
                pos = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };

                infoWindow.setPosition(pos);
                infoWindow.setContent('Your are here!');
                infoWindow.open(map);
                map.setCenter(pos);
            }, function () {
                handleLocationError(true, infoWindow, map.getCenter());
            });
        } else {
            // Browser doesn't support Geolocation
            handleLocationError(false, infoWindow, map.getCenter());
        }
    }
    function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        infoWindow.setPosition(pos);
        infoWindow.setContent(browserHasGeolocation ?
            'Error: The Geolocation service failed.' :
            'Error: Your browser doesn\'t support geolocation.');
        infoWindow.open(map);
    }

    function calculateAndDisplayRoute(directionsService, directionsRenderer) {
        directionsService.route(
            {
                origin: pos,
                destination: { lat: -37.876823, lng: 145.045837 },
                travelMode: 'DRIVING'
            },
            function (response, status) {
                if (status === 'OK') {
                    directionsRenderer.setDirections(response);
                } else {
                    window.alert('Directions request failed due to ' + status);
                }
            });
    }
</script>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
